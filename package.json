{
  "name": "socketchat.io",
  "version": "1.0.0",
  "description": "Функционал нашего приложения будет следующим:   - при первом запуске приложение предлагает пользователю ввести свое имя;  - имя пользователя и его идентификатор записываются в локальное хранилище;  - при повторном запуске приложения имя и идентификатор пользователя извлекаются из локального хранилища (имитация системы аутентификации/авторизации);  - выполняется подключение к серверу через [веб-сокеты](https://ru.wikipedia.org/wiki/WebSocket) и вход в комнату `main_room` (при желании можно легко реализовать возможность выбора или создания других комнат);  - пользователи обмениваются сообщениями в реальном времени; - типом сообщения может быть текст, аудио, видео или изображение;  - передаваемые файлы сохраняются на сервере;  - путь к сохраненному на сервере файлу добавляется в сообщение;  - сообщение записывается в базу данных;  - пользователи могут записывать аудио и видеосообщения;  - после прикрепления файла и записи аудио или видео сообщения, отображается превью созданного контента;  - пользователи могут добавлять в текст сообщения эмодзи;  - текстовые сообщения могут озвучиваться;  - и т.д.",
  "main": "index.js",
  "scripts": {
    "dev:client": "npm run start --prefix client",
    "dev:server": "npm run dev --prefix server",
    "dev": "concurrently \"npm run dev:client\" \"npm run dev:server\""
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DanilMU/SocketChat.io.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "bugs": {
    "url": "https://github.com/DanilMU/SocketChat.io/issues"
  },
  "homepage": "https://github.com/DanilMU/SocketChat.io#readme",
  "dependencies": {
    "@prisma/client": "^6.7.0",
    "concurrently": "^9.1.2",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "mongoose": "^8.14.2",
    "multer": "^1.4.5-lts.2",
    "pg": "^8.16.0",
    "prisma": "^6.7.0",
    "socket.io": "^4.8.1"
  },
  "devDependencies": {
    "nodemon": "^3.1.10"
  }
}
